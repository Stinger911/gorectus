// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "GoRectus API Support",
            "email": "support@gorectus.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Authenticate user credentials and return JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "User credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "schema": {
                            "$ref": "#/definitions/main.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Log out the current user (client-side token removal)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "User logout",
                "responses": {
                    "200": {
                        "description": "Successful logout",
                        "schema": {
                            "$ref": "#/definitions/main.SuccessMessage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/me": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get the current authenticated user's profile information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Get current user",
                "responses": {
                    "200": {
                        "description": "Current user information",
                        "schema": {
                            "$ref": "#/definitions/main.UserModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Generate a new JWT token using the current valid token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Refresh JWT token",
                "responses": {
                    "200": {
                        "description": "New token generated",
                        "schema": {
                            "$ref": "#/definitions/main.LoginResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/collections": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a list of all collections in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collections"
                ],
                "summary": "Get all collections",
                "responses": {
                    "200": {
                        "description": "List of collections",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.CollectionModel"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new collection in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collections"
                ],
                "summary": "Create a new collection",
                "parameters": [
                    {
                        "description": "Collection data",
                        "name": "collection",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.CollectionModel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created collection",
                        "schema": {
                            "$ref": "#/definitions/main.CollectionModel"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Collection already exists",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/collections/{collection}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a specific collection by its name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collections"
                ],
                "summary": "Get collection by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collection name",
                        "name": "collection",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Collection details",
                        "schema": {
                            "$ref": "#/definitions/main.CollectionModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Collection not found",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a specific collection by its name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collections"
                ],
                "summary": "Delete a collection by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collection name",
                        "name": "collection",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Collection deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/main.SuccessMessage"
                        }
                    },
                    "400": {
                        "description": "Bad request - cannot delete system collection",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Collection not found",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing collection in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collections"
                ],
                "summary": "Update an existing collection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collection name",
                        "name": "collection",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Fields to update",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.UpdateCollectionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated collection",
                        "schema": {
                            "$ref": "#/definitions/main.CollectionModel"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Collection not found",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dashboard": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve comprehensive dashboard overview including system stats, collection metrics, recent activity, system health, and user insights (user insights only available for admins)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dashboard"
                ],
                "summary": "Get dashboard overview",
                "responses": {
                    "200": {
                        "description": "Dashboard overview data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/main.DashboardOverview"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/dashboard/activity": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve recent system activity with optional limit parameter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dashboard"
                ],
                "summary": "Get recent activity",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Maximum number of activity items to return (1-100, default: 20)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recent activity data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/main.ActivityItem"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/dashboard/collections": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve collection metrics including total collections, distribution by type, and activity data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dashboard"
                ],
                "summary": "Get collection insights",
                "responses": {
                    "200": {
                        "description": "Collection metrics data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/main.CollectionMetrics"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/dashboard/stats": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve system statistics including user counts, role counts, collection counts, and active sessions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dashboard"
                ],
                "summary": "Get system statistics",
                "responses": {
                    "200": {
                        "description": "System statistics",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/main.SystemStats"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/dashboard/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve user insights including user distribution by status and role, new user statistics, and user activity data (Admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dashboard"
                ],
                "summary": "Get user insights",
                "responses": {
                    "200": {
                        "description": "User insights data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/main.UserInsights"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/fields": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a paginated list of all fields in the system with optional collection filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "fields"
                ],
                "summary": "Get all fields",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number for pagination (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page (max: 100, default: 50)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter fields by collection name",
                        "name": "collection",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of fields with pagination metadata",
                        "schema": {
                            "$ref": "#/definitions/main.FieldsListResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/fields/{collection}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve all fields for a specific collection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "fields"
                ],
                "summary": "Get fields by collection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collection name",
                        "name": "collection",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of fields for the collection",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/main.FieldDetail"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Collection not found",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new field in a collection with optional database column creation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "fields"
                ],
                "summary": "Create a new field",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collection name",
                        "name": "collection",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Field creation data",
                        "name": "field",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.CreateFieldRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created field details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/main.FieldDetail"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request (invalid payload, field name, or field already exists)",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden (admin access required)",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Collection not found",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Field already exists",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/fields/{collection}/{field}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a specific field by collection and field name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "fields"
                ],
                "summary": "Get field by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collection name",
                        "name": "collection",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Field name",
                        "name": "field",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Field details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/main.FieldDetail"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Field not found",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a field from a collection and optionally drop the database column",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "fields"
                ],
                "summary": "Delete a field",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collection name",
                        "name": "collection",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Field name",
                        "name": "field",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Field deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/main.SuccessMessage"
                        }
                    },
                    "400": {
                        "description": "Bad request (cannot delete system field)",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden (admin access required)",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Field not found",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing field's metadata and optionally alter the database column",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "fields"
                ],
                "summary": "Update an existing field",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collection name",
                        "name": "collection",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Field name",
                        "name": "field",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Field update data",
                        "name": "updates",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.UpdateFieldRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated field details",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/main.FieldDetail"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request (invalid payload or no fields to update)",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden (admin access required)",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Field not found",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Get the health status of the API",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "Health status",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/items/{collection}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a list of all items from a specific collection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Get all items from a collection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collection name",
                        "name": "collection",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limit the number of results",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of items",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.ItemModel"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Collection not found",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new item in a specific collection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Create a new item",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collection name",
                        "name": "collection",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Item data",
                        "name": "item",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.ItemModel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created item",
                        "schema": {
                            "$ref": "#/definitions/main.ItemModel"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Collection not found",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/items/{collection}/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a specific item from a collection by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Get item by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collection name",
                        "name": "collection",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Item details",
                        "schema": {
                            "$ref": "#/definitions/main.ItemModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a specific item from a collection by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Delete an item",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collection name",
                        "name": "collection",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "schema": {
                            "$ref": "#/definitions/main.SuccessMessage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing item in a specific collection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Update an existing item",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collection name",
                        "name": "collection",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated item data",
                        "name": "item",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.ItemModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated item",
                        "schema": {
                            "$ref": "#/definitions/main.ItemModel"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.ActivityItem": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "collection": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "item": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "main.CollectionMetrics": {
            "type": "object",
            "properties": {
                "collections_by_type": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "most_active_collections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.CollectionSummary"
                    }
                },
                "recent_collections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.CollectionSummary"
                    }
                },
                "total_collections": {
                    "type": "integer"
                }
            }
        },
        "main.CollectionModel": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2023-01-01T10:30:00Z"
                },
                "description": {
                    "type": "string",
                    "example": "Product catalog collection"
                },
                "id": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "name": {
                    "type": "string",
                    "example": "Products"
                },
                "schema": {
                    "type": "string",
                    "example": "{}"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-12-01T10:30:00Z"
                }
            }
        },
        "main.CollectionSummary": {
            "type": "object",
            "properties": {
                "collection": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "hidden": {
                    "type": "boolean"
                },
                "icon": {
                    "type": "string"
                },
                "item_count": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "singleton": {
                    "type": "boolean"
                }
            }
        },
        "main.CreateFieldRequest": {
            "type": "object",
            "required": [
                "field"
            ],
            "properties": {
                "conditions": {},
                "display": {
                    "type": "string"
                },
                "display_options": {},
                "field": {
                    "type": "string"
                },
                "group": {
                    "type": "string"
                },
                "hidden": {
                    "type": "boolean"
                },
                "interface": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "options": {},
                "readonly": {
                    "type": "boolean"
                },
                "required": {
                    "type": "boolean"
                },
                "schema": {
                    "description": "For creating database columns",
                    "allOf": [
                        {
                            "$ref": "#/definitions/main.FieldSchema"
                        }
                    ]
                },
                "sort": {
                    "type": "integer"
                },
                "special": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "translations": {},
                "validation": {},
                "validation_message": {
                    "type": "string"
                },
                "width": {
                    "type": "string"
                }
            }
        },
        "main.DashboardOverview": {
            "type": "object",
            "properties": {
                "collection_metrics": {
                    "$ref": "#/definitions/main.CollectionMetrics"
                },
                "recent_activity": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.ActivityItem"
                    }
                },
                "system_health": {
                    "$ref": "#/definitions/main.SystemHealth"
                },
                "system_stats": {
                    "$ref": "#/definitions/main.SystemStats"
                },
                "user_insights": {
                    "$ref": "#/definitions/main.UserInsights"
                }
            }
        },
        "main.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Invalid request payload"
                }
            }
        },
        "main.FieldDetail": {
            "type": "object",
            "properties": {
                "collection": {
                    "type": "string"
                },
                "conditions": {},
                "created_at": {
                    "type": "string"
                },
                "display": {
                    "type": "string"
                },
                "display_options": {},
                "field": {
                    "type": "string"
                },
                "group": {
                    "type": "string"
                },
                "hidden": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "interface": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "options": {},
                "readonly": {
                    "type": "boolean"
                },
                "required": {
                    "type": "boolean"
                },
                "sort": {
                    "type": "integer"
                },
                "special": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "translations": {},
                "updated_at": {
                    "type": "string"
                },
                "validation": {},
                "validation_message": {
                    "type": "string"
                },
                "width": {
                    "type": "string"
                }
            }
        },
        "main.FieldSchema": {
            "type": "object",
            "properties": {
                "data_type": {
                    "description": "varchar, integer, boolean, text, json, uuid, timestamp, etc.",
                    "type": "string"
                },
                "default_value": {
                    "description": "Default value for column"
                },
                "foreign_column": {
                    "description": "For foreign key relationships",
                    "type": "string"
                },
                "foreign_table": {
                    "description": "For foreign key relationships",
                    "type": "string"
                },
                "is_nullable": {
                    "description": "Whether column allows NULL",
                    "type": "boolean"
                },
                "is_primary_key": {
                    "description": "Whether column is primary key",
                    "type": "boolean"
                },
                "is_unique": {
                    "description": "Whether column should be unique",
                    "type": "boolean"
                },
                "max_length": {
                    "description": "For varchar",
                    "type": "integer"
                }
            }
        },
        "main.FieldsListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.FieldDetail"
                    }
                },
                "meta": {
                    "type": "object",
                    "properties": {
                        "limit": {
                            "type": "integer"
                        },
                        "page": {
                            "type": "integer"
                        },
                        "total": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "main.ItemData": {
            "type": "object"
        },
        "main.ItemModel": {
            "type": "object",
            "properties": {
                "collection_id": {
                    "type": "string",
                    "example": "456e7890-e89b-12d3-a456-426614174001"
                },
                "created_at": {
                    "type": "string",
                    "example": "2023-01-01T10:30:00Z"
                },
                "data": {
                    "$ref": "#/definitions/main.ItemData"
                },
                "id": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-12-01T10:30:00Z"
                }
            }
        },
        "main.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "password123"
                }
            }
        },
        "main.LoginResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                },
                "expires_in": {
                    "type": "integer",
                    "example": 86400
                },
                "token_type": {
                    "type": "string",
                    "example": "Bearer"
                },
                "user": {
                    "$ref": "#/definitions/main.UserModel"
                }
            }
        },
        "main.SuccessMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Operation completed successfully"
                }
            }
        },
        "main.SystemHealth": {
            "type": "object",
            "properties": {
                "database_connected": {
                    "type": "boolean"
                },
                "last_backup": {
                    "type": "string"
                },
                "server_uptime": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "main.SystemStats": {
            "type": "object",
            "properties": {
                "active_users": {
                    "type": "integer"
                },
                "total_collections": {
                    "type": "integer"
                },
                "total_roles": {
                    "type": "integer"
                },
                "total_sessions": {
                    "type": "integer"
                },
                "total_users": {
                    "type": "integer"
                }
            }
        },
        "main.UpdateCollectionRequest": {
            "type": "object",
            "properties": {
                "accountability": {
                    "type": "string"
                },
                "archive_app_filter": {
                    "type": "boolean"
                },
                "archive_field": {
                    "type": "string"
                },
                "archive_value": {
                    "type": "string"
                },
                "collapse": {
                    "type": "string"
                },
                "color": {
                    "type": "string"
                },
                "display_template": {
                    "type": "string"
                },
                "group": {
                    "type": "string"
                },
                "hidden": {
                    "type": "boolean"
                },
                "icon": {
                    "type": "string"
                },
                "item_duplication_fields": {},
                "note": {
                    "type": "string"
                },
                "preview_url": {
                    "type": "string"
                },
                "singleton": {
                    "type": "boolean"
                },
                "sort": {
                    "type": "integer"
                },
                "sort_field": {
                    "type": "string"
                },
                "translations": {},
                "unarchive_value": {
                    "type": "string"
                },
                "versioning": {
                    "type": "boolean"
                }
            }
        },
        "main.UpdateFieldRequest": {
            "type": "object",
            "properties": {
                "conditions": {},
                "display": {
                    "type": "string"
                },
                "display_options": {},
                "group": {
                    "type": "string"
                },
                "hidden": {
                    "type": "boolean"
                },
                "interface": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "options": {},
                "readonly": {
                    "type": "boolean"
                },
                "required": {
                    "type": "boolean"
                },
                "schema": {
                    "description": "For altering database columns",
                    "allOf": [
                        {
                            "$ref": "#/definitions/main.FieldSchema"
                        }
                    ]
                },
                "sort": {
                    "type": "integer"
                },
                "special": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "translations": {},
                "validation": {},
                "validation_message": {
                    "type": "string"
                },
                "width": {
                    "type": "string"
                }
            }
        },
        "main.UserInsights": {
            "type": "object",
            "properties": {
                "most_active_users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.UserSummary"
                    }
                },
                "new_users_this_month": {
                    "type": "integer"
                },
                "new_users_this_week": {
                    "type": "integer"
                },
                "recent_registrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.UserSummary"
                    }
                },
                "users_by_role": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "users_by_status": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                }
            }
        },
        "main.UserModel": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string",
                    "example": "https://example.com/avatar.jpg"
                },
                "created_at": {
                    "type": "string",
                    "example": "2023-01-01T10:30:00Z"
                },
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "email_notifications": {
                    "type": "boolean",
                    "example": true
                },
                "external_identifier": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string",
                    "example": "John"
                },
                "id": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "language": {
                    "type": "string",
                    "example": "en"
                },
                "last_access": {
                    "type": "string",
                    "example": "2023-12-01T10:30:00Z"
                },
                "last_name": {
                    "type": "string",
                    "example": "Doe"
                },
                "last_page": {
                    "type": "string",
                    "example": "/dashboard"
                },
                "provider": {
                    "type": "string",
                    "example": "local"
                },
                "role_id": {
                    "type": "string",
                    "example": "456e7890-e89b-12d3-a456-426614174001"
                },
                "role_name": {
                    "type": "string",
                    "example": "admin"
                },
                "status": {
                    "type": "string",
                    "example": "active"
                },
                "tags": {
                    "type": "string",
                    "example": "admin,power-user"
                },
                "theme": {
                    "type": "string",
                    "example": "light"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-12-01T10:30:00Z"
                }
            }
        },
        "main.UserSummary": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_access": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "GoRectus API",
	Description:      "A comprehensive API for managing collections, items, fields, users, and roles",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
